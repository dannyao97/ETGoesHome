package etgoeshome;

import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author Daniel
 */
public class GUI extends javax.swing.JFrame implements Observer {

   //Reference to the logic class
   protected final Logic logic;

   /**
    * Creates new form GUI
    */
   public GUI(final Logic logicRef) {
      initComponents();
      this.logic = logicRef;
      this.logic.addObserver(this);
      this.getRootPane().setDefaultButton(btnLogin);
      dialogMessage.setLocationRelativeTo(this);

      setTabStatus(false);
      this.pack();
      this.setLocationRelativeTo(null);
   }

   public void setTabStatus(boolean status) {
      tabPane.setEnabled(status);
      //tab1 elements
      statesTab.setEnabled(status);
      btnGetData.setEnabled(status);
      boxStates.setEnabled(status);
      tabStatesTable.setEnabled(status);
      boxStateQuerySelect.setEnabled(status);
      lblStateQuery.setEnabled(status);

      //tab2 elements
      addShooting.setEnabled(status);

      //tab3 elements
      sightingsTab.setEnabled(status);
      btnGetSightingData.setEnabled(status);
      tabSightingsTable.setEnabled(status);
      boxSightingQuerySelect.setEnabled(status);
      lblSightingQuery.setEnabled(status);

      //tab4 elements
      shootingsTab.setEnabled(status);
      btnGetShootingData.setEnabled(status);
      tabShootingsTable.setEnabled(status);
      boxShootingQuerySelect.setEnabled(status);
      lblShootingQuery.setEnabled(status);
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      dialogMessage = new javax.swing.JDialog();
      jPanel1 = new javax.swing.JPanel();
      btnOkDialog = new javax.swing.JButton();
      lblDialogMessage = new javax.swing.JLabel();
      tabPane = new javax.swing.JTabbedPane();
      statesTab = new javax.swing.JPanel();
      boxStates = new javax.swing.JComboBox<>();
      tab1LabelState = new javax.swing.JLabel();
      btnGetData = new javax.swing.JButton();
      jScrollPane1 = new javax.swing.JScrollPane();
      tabStatesTable = new JTable(){
         @Override
         public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {
            Component component = super.prepareRenderer(renderer, row, column);
            int rendererWidth = component.getPreferredSize().width;
            TableColumn tableColumn = getColumnModel().getColumn(column);
            tableColumn.setPreferredWidth(Math.max(rendererWidth + getIntercellSpacing().width, tableColumn.getPreferredWidth()));
            return component;
         }
      };
      lblAnalyzeStates = new javax.swing.JLabel();
      boxStateQuerySelect = new javax.swing.JComboBox();
      lblStateQuery = new javax.swing.JLabel();
      sightingsTab = new javax.swing.JPanel();
      btnGetSightingData = new javax.swing.JButton();
      jScrollPane2 = new javax.swing.JScrollPane();
      tabSightingsTable = new JTable(){
         @Override
         public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {
            Component component = super.prepareRenderer(renderer, row, column);
            int rendererWidth = component.getPreferredSize().width;
            TableColumn tableColumn = getColumnModel().getColumn(column);
            tableColumn.setPreferredWidth(Math.max(rendererWidth + getIntercellSpacing().width, tableColumn.getPreferredWidth()));
            return component;
         }
      };
      lblSightings = new javax.swing.JLabel();
      boxSightingQuerySelect = new javax.swing.JComboBox();
      lblSightingQuery = new javax.swing.JLabel();
      shootingsTab = new javax.swing.JPanel();
      btnGetShootingData = new javax.swing.JButton();
      jScrollPane3 = new javax.swing.JScrollPane();
      tabShootingsTable = new JTable(){
         @Override
         public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {
            Component component = super.prepareRenderer(renderer, row, column);
            int rendererWidth = component.getPreferredSize().width;
            TableColumn tableColumn = getColumnModel().getColumn(column);
            tableColumn.setPreferredWidth(Math.max(rendererWidth + getIntercellSpacing().width, tableColumn.getPreferredWidth()));
            return component;
         }
      };
      lblShootings = new javax.swing.JLabel();
      boxShootingQuerySelect = new javax.swing.JComboBox();
      lblShootingQuery = new javax.swing.JLabel();
      addShooting = new javax.swing.JPanel();
      lblShooting = new javax.swing.JLabel();
      lblShootingName = new javax.swing.JLabel();
      lblShootingDate = new javax.swing.JLabel();
      lblShootingWeapon = new javax.swing.JLabel();
      lblShootingName3 = new javax.swing.JLabel();
      lblShootingAge = new javax.swing.JLabel();
      lblShootingGender = new javax.swing.JLabel();
      lblShootingRace = new javax.swing.JLabel();
      lblShootingCity = new javax.swing.JLabel();
      lblShootingState = new javax.swing.JLabel();
      lblShootingMental = new javax.swing.JLabel();
      lblShootingThreat = new javax.swing.JLabel();
      lblShootingFlee = new javax.swing.JLabel();
      lblShootingCamera = new javax.swing.JLabel();
      btnAddShooting = new javax.swing.JButton();
      txtShootingName = new javax.swing.JTextField();
      txtShootingDeath = new javax.swing.JTextField();
      lblShootingDeathSupp = new javax.swing.JLabel();
      txtShootingWeapon = new javax.swing.JTextField();
      boxShootingGender = new javax.swing.JComboBox<>();
      boxShootingRace = new javax.swing.JComboBox<>();
      txtShootingCity = new javax.swing.JTextField();
      lblShootingCitySupp = new javax.swing.JLabel();
      boxShootingThreat = new javax.swing.JComboBox<>();
      boxShootingFlee = new javax.swing.JComboBox<>();
      boxShootingMental = new javax.swing.JComboBox<>();
      boxShootingCamera = new javax.swing.JComboBox<>();
      lblShootingDateSupp = new javax.swing.JLabel();
      lblShootingNameSupp = new javax.swing.JLabel();
      spinShooterAge = new javax.swing.JSpinner();
      boxShootingState = new javax.swing.JComboBox<>();
      boxShootingDate = new javax.swing.JSpinner();
      addUfo = new javax.swing.JPanel();
      lblUfo = new javax.swing.JLabel();
      lblUfoOccur = new javax.swing.JLabel();
      lblUfoCity = new javax.swing.JLabel();
      lblUfoState = new javax.swing.JLabel();
      lblUfoShape = new javax.swing.JLabel();
      lblUfoDuration = new javax.swing.JLabel();
      lblUfoDescript = new javax.swing.JLabel();
      boxUfoOccur = new javax.swing.JSpinner();
      txtUfoCity = new javax.swing.JTextField();
      lblUfoOccurSupp = new javax.swing.JLabel();
      lblUfoCitySupp = new javax.swing.JLabel();
      boxUfoState = new javax.swing.JComboBox<>();
      txtUfoShape = new javax.swing.JTextField();
      lblUfoShapeSupp = new javax.swing.JLabel();
      boxUfoDuration = new javax.swing.JSpinner();
      lblUfoDurationSupp = new javax.swing.JLabel();
      scrollpaneUfo = new javax.swing.JScrollPane();
      txtUfoDescript = new javax.swing.JTextArea();
      lblUfoDescriptSupp = new javax.swing.JLabel();
      btnUfo = new javax.swing.JButton();
      txtLogin = new javax.swing.JTextField();
      txtPassword = new javax.swing.JPasswordField();
      btnLogin = new javax.swing.JButton();
      lblUser = new javax.swing.JLabel();
      lblPw = new javax.swing.JLabel();
      lblStatus = new javax.swing.JLabel();
      lblBy = new javax.swing.JLabel();

      dialogMessage.setTitle("Message");
      dialogMessage.setMinimumSize(new java.awt.Dimension(420, 230));

      btnOkDialog.setText("OK");
      btnOkDialog.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnOkDialogActionPerformed(evt);
         }
      });

      lblDialogMessage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
      lblDialogMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      lblDialogMessage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap(153, Short.MAX_VALUE)
            .addComponent(btnOkDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(153, 153, 153))
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblDialogMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addContainerGap(60, Short.MAX_VALUE)
            .addComponent(lblDialogMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(50, 50, 50)
            .addComponent(btnOkDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
      );

      javax.swing.GroupLayout dialogMessageLayout = new javax.swing.GroupLayout(dialogMessage.getContentPane());
      dialogMessage.getContentPane().setLayout(dialogMessageLayout);
      dialogMessageLayout.setHorizontalGroup(
         dialogMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogMessageLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
      );
      dialogMessageLayout.setVerticalGroup(
         dialogMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(dialogMessageLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
      );

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setTitle("ET Goes Home");
      setMinimumSize(new java.awt.Dimension(700, 600));

      tabPane.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

      statesTab.addFocusListener(new java.awt.event.FocusAdapter() {
         public void focusGained(java.awt.event.FocusEvent evt) {
            statesTabFocusGained(evt);
         }
      });

      boxStates.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxStates.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY" }));

      tab1LabelState.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      tab1LabelState.setText("Select a State:");

      btnGetData.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      btnGetData.setText("Get Data");
      btnGetData.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnGetDataActionPerformed(evt);
         }
      });

      tabStatesTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      tabStatesTable.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][] {

         },
         new String [] {

         }
      ));
      tabStatesTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
      jScrollPane1.setViewportView(tabStatesTable);

      lblAnalyzeStates.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
      lblAnalyzeStates.setText("Analyze UFOs and Shootings");

      boxStateQuerySelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All Cities", "Shootings per City", "UFO Sightings per City", "Sightings and Shootings per City", "Sightings and Shootings by Gender per State", "Shootings without Mental with Sighting per City" }));
      boxStateQuerySelect.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            boxStateQuerySelectActionPerformed(evt);
         }
      });

      lblStateQuery.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblStateQuery.setText("Select a Query:");

      javax.swing.GroupLayout statesTabLayout = new javax.swing.GroupLayout(statesTab);
      statesTab.setLayout(statesTabLayout);
      statesTabLayout.setHorizontalGroup(
         statesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(statesTabLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(statesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(statesTabLayout.createSequentialGroup()
                  .addComponent(lblAnalyzeStates)
                  .addGap(0, 403, Short.MAX_VALUE))
               .addGroup(statesTabLayout.createSequentialGroup()
                  .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(statesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(lblStateQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addGroup(statesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statesTabLayout.createSequentialGroup()
                           .addComponent(tab1LabelState, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                           .addComponent(boxStates, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnGetData, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(boxStateQuerySelect, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addContainerGap())
      );
      statesTabLayout.setVerticalGroup(
         statesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(statesTabLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblAnalyzeStates)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(statesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(statesTabLayout.createSequentialGroup()
                  .addGroup(statesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(tab1LabelState, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(boxStates, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addGap(13, 13, 13)
                  .addComponent(lblStateQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(boxStateQuerySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addComponent(btnGetData, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(76, Short.MAX_VALUE))
      );

      tabPane.addTab("Analyze UFO & Shootings", statesTab);

      btnGetSightingData.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      btnGetSightingData.setText("Get Data");
      btnGetSightingData.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnGetSightingDataActionPerformed(evt);
         }
      });

      tabSightingsTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      tabSightingsTable.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][] {

         },
         new String [] {

         }
      ));
      tabSightingsTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
      jScrollPane2.setViewportView(tabSightingsTable);

      lblSightings.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
      lblSightings.setText("UFO Sightings");

      boxSightingQuerySelect.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxSightingQuerySelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "UFOs by Shape", "UFOs by Year", "Longest Sighting", "Year with most Sightings", "City with most Sightings", "Described a Bright Light" }));
      boxSightingQuerySelect.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            boxSightingQuerySelectActionPerformed(evt);
         }
      });

      lblSightingQuery.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblSightingQuery.setText("Select a Query:");

      javax.swing.GroupLayout sightingsTabLayout = new javax.swing.GroupLayout(sightingsTab);
      sightingsTab.setLayout(sightingsTabLayout);
      sightingsTabLayout.setHorizontalGroup(
         sightingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(sightingsTabLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(sightingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(sightingsTabLayout.createSequentialGroup()
                  .addComponent(lblSightings)
                  .addContainerGap(528, Short.MAX_VALUE))
               .addGroup(sightingsTabLayout.createSequentialGroup()
                  .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                  .addGap(18, 18, 18)
                  .addGroup(sightingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(sightingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnGetSightingData)
                        .addComponent(boxSightingQuerySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addComponent(lblSightingQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addGap(36, 36, 36))))
      );
      sightingsTabLayout.setVerticalGroup(
         sightingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(sightingsTabLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblSightings)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(sightingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(sightingsTabLayout.createSequentialGroup()
                  .addComponent(lblSightingQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(boxSightingQuerySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(18, 18, 18)
                  .addComponent(btnGetSightingData, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(76, Short.MAX_VALUE))
      );

      tabPane.addTab("UFO Sightings", sightingsTab);

      btnGetShootingData.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      btnGetShootingData.setText("Get Data");
      btnGetShootingData.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnGetShootingDataActionPerformed(evt);
         }
      });

      tabShootingsTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      tabShootingsTable.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][] {

         },
         new String [] {

         }
      ));
      tabShootingsTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
      jScrollPane3.setViewportView(tabShootingsTable);

      lblShootings.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
      lblShootings.setText("Police Shootings");

      boxShootingQuerySelect.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxShootingQuerySelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Shootings by Race", "Shootings by Gender", "Shootings by Day of Week", "Shootings of Armed Victims", "Shootings and Body Cameras" }));
      boxShootingQuerySelect.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            boxShootingQuerySelectActionPerformed(evt);
         }
      });

      lblShootingQuery.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingQuery.setText("Select a Query:");

      javax.swing.GroupLayout shootingsTabLayout = new javax.swing.GroupLayout(shootingsTab);
      shootingsTab.setLayout(shootingsTabLayout);
      shootingsTabLayout.setHorizontalGroup(
         shootingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(shootingsTabLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(shootingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(shootingsTabLayout.createSequentialGroup()
                  .addComponent(lblShootings)
                  .addContainerGap(511, Short.MAX_VALUE))
               .addGroup(shootingsTabLayout.createSequentialGroup()
                  .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                  .addGap(18, 18, 18)
                  .addGroup(shootingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(shootingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnGetShootingData)
                        .addComponent(boxShootingQuerySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addComponent(lblShootingQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addGap(25, 25, 25))))
      );
      shootingsTabLayout.setVerticalGroup(
         shootingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(shootingsTabLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblShootings)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(shootingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(shootingsTabLayout.createSequentialGroup()
                  .addComponent(lblShootingQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(boxShootingQuerySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(18, 18, 18)
                  .addComponent(btnGetShootingData, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(76, Short.MAX_VALUE))
      );

      tabPane.addTab("Shootings", shootingsTab);

      lblShooting.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
      lblShooting.setText("Report a New Shooting");

      lblShootingName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingName.setText("Victim Name:");

      lblShootingDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingDate.setText("Date:");

      lblShootingWeapon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingWeapon.setText("Manner of Death:");

      lblShootingName3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingName3.setText("Weapon:");

      lblShootingAge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingAge.setText("Age:");

      lblShootingGender.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingGender.setText("Gender:");

      lblShootingRace.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingRace.setText("Ethnicity:");

      lblShootingCity.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingCity.setText("City:");

      lblShootingState.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingState.setText("State:");

      lblShootingMental.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingMental.setText("History of Mental Illness:");

      lblShootingThreat.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingThreat.setText("Threat:");

      lblShootingFlee.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingFlee.setText("Fleeing:");

      lblShootingCamera.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingCamera.setText("Cop Body Camera:");

      btnAddShooting.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      btnAddShooting.setText("Add Shooting");
      btnAddShooting.setMargin(new java.awt.Insets(2, 7, 2, 7));
      btnAddShooting.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAddShootingActionPerformed(evt);
         }
      });

      txtShootingName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

      txtShootingDeath.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

      lblShootingDeathSupp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingDeathSupp.setText("(e.g. shot, tasered, etc.)");

      txtShootingWeapon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

      boxShootingGender.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxShootingGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "F", "M" }));
      boxShootingGender.setSelectedIndex(1);

      boxShootingRace.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxShootingRace.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Asian", "Black", "White", "Hispanic", "Other" }));
      boxShootingRace.setSelectedIndex(2);

      txtShootingCity.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

      lblShootingCitySupp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingCitySupp.setText("(required)");

      boxShootingThreat.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxShootingThreat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Attack", "Other", "Undetermined" }));

      boxShootingFlee.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxShootingFlee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not Fleeing", "Car", "Foot", "Other" }));

      boxShootingMental.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxShootingMental.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "T", "F" }));
      boxShootingMental.setSelectedIndex(1);

      boxShootingCamera.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxShootingCamera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "T", "F" }));

      lblShootingDateSupp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingDateSupp.setText("(yyyy-MM-dd)");

      lblShootingNameSupp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblShootingNameSupp.setText("(required)");

      spinShooterAge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      spinShooterAge.setModel(new javax.swing.SpinnerNumberModel(21, 1, 130, 1));

      boxShootingState.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxShootingState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AK", "AL", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY" }));
      boxShootingState.setSelectedIndex(4);

      boxShootingDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxShootingDate.setModel(new javax.swing.SpinnerDateModel());
      boxShootingDate.setEditor(new javax.swing.JSpinner.DateEditor(boxShootingDate, "yyyy-MM-dd"));

      javax.swing.GroupLayout addShootingLayout = new javax.swing.GroupLayout(addShooting);
      addShooting.setLayout(addShootingLayout);
      addShootingLayout.setHorizontalGroup(
         addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(addShootingLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(addShootingLayout.createSequentialGroup()
                  .addGap(36, 36, 36)
                  .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                     .addComponent(lblShootingName)
                     .addComponent(lblShootingWeapon)
                     .addComponent(lblShootingName3)
                     .addComponent(lblShootingDate)
                     .addComponent(lblShootingAge)
                     .addComponent(lblShootingGender)
                     .addComponent(lblShootingRace)
                     .addComponent(lblShootingCity)
                     .addComponent(lblShootingState)
                     .addComponent(lblShootingThreat)
                     .addComponent(lblShootingFlee))
                  .addGap(18, 18, 18)
                  .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(addShootingLayout.createSequentialGroup()
                        .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                           .addComponent(txtShootingName, javax.swing.GroupLayout.Alignment.LEADING)
                           .addGroup(addShootingLayout.createSequentialGroup()
                              .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                 .addComponent(txtShootingWeapon, javax.swing.GroupLayout.Alignment.LEADING)
                                 .addComponent(txtShootingDeath))
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                              .addComponent(lblShootingDeathSupp)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblShootingNameSupp)
                        .addGap(77, 77, 77))
                     .addGroup(addShootingLayout.createSequentialGroup()
                        .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addGroup(addShootingLayout.createSequentialGroup()
                              .addComponent(boxShootingDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                              .addComponent(lblShootingDateSupp))
                           .addComponent(boxShootingGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(boxShootingRace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addGroup(addShootingLayout.createSequentialGroup()
                              .addComponent(txtShootingCity, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                              .addComponent(lblShootingCitySupp))
                           .addComponent(boxShootingThreat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(boxShootingFlee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(spinShooterAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(boxShootingState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(177, Short.MAX_VALUE))))
               .addGroup(addShootingLayout.createSequentialGroup()
                  .addComponent(lblShooting)
                  .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
               .addGroup(addShootingLayout.createSequentialGroup()
                  .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                     .addComponent(lblShootingCamera)
                     .addComponent(lblShootingMental))
                  .addGap(18, 18, 18)
                  .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(boxShootingMental, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(boxShootingCamera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addGap(0, 0, Short.MAX_VALUE))
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addShootingLayout.createSequentialGroup()
                  .addGap(0, 0, Short.MAX_VALUE)
                  .addComponent(btnAddShooting, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(20, 20, 20))))
      );
      addShootingLayout.setVerticalGroup(
         addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(addShootingLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblShooting)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(txtShootingName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(lblShootingNameSupp))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(lblShootingDateSupp)
               .addComponent(boxShootingDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(txtShootingDeath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(lblShootingDeathSupp))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingName3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(txtShootingWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingAge, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(spinShooterAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingGender, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(boxShootingGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingRace, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(boxShootingRace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingCity, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(txtShootingCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(lblShootingCitySupp))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingState, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(boxShootingState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingThreat, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(boxShootingThreat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingFlee, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(boxShootingFlee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingMental, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(boxShootingMental, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(addShootingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblShootingCamera, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(boxShootingCamera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnAddShooting, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(14, Short.MAX_VALUE))
      );

      tabPane.addTab("Report a Shooting", addShooting);

      lblUfo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
      lblUfo.setText("Report a New UFO Sighting");

      lblUfoOccur.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblUfoOccur.setText("Occurence:");

      lblUfoCity.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblUfoCity.setText("City:");

      lblUfoState.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblUfoState.setText("State:");
      lblUfoState.setToolTipText("");

      lblUfoShape.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblUfoShape.setText("Shape:");

      lblUfoDuration.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblUfoDuration.setText("Duration:");

      lblUfoDescript.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblUfoDescript.setText("Description:");

      boxUfoOccur.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxUfoOccur.setModel(new javax.swing.SpinnerDateModel());
      boxUfoOccur.setEditor(new javax.swing.JSpinner.DateEditor(boxUfoOccur, "yyyy-MM-dd hh:mm:ss"));

      txtUfoCity.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

      lblUfoOccurSupp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblUfoOccurSupp.setText("(yyyy-MM-dd  hh:mm:ss)");

      lblUfoCitySupp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblUfoCitySupp.setText("(required)");

      boxUfoState.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxUfoState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AK", "AL", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY" }));
      boxUfoState.setSelectedIndex(4);

      txtUfoShape.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

      lblUfoShapeSupp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblUfoShapeSupp.setText("(e.g. Oval, Square, etc.)");

      boxUfoDuration.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      boxUfoDuration.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

      lblUfoDurationSupp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblUfoDurationSupp.setText("seconds");

      scrollpaneUfo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

      txtUfoDescript.setColumns(20);
      txtUfoDescript.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      txtUfoDescript.setRows(5);
      scrollpaneUfo.setViewportView(txtUfoDescript);

      lblUfoDescriptSupp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblUfoDescriptSupp.setText("(max. 200)");

      btnUfo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      btnUfo.setText("Add UFO");
      btnUfo.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnUfoActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout addUfoLayout = new javax.swing.GroupLayout(addUfo);
      addUfo.setLayout(addUfoLayout);
      addUfoLayout.setHorizontalGroup(
         addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(addUfoLayout.createSequentialGroup()
            .addGroup(addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(addUfoLayout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(lblUfo))
               .addGroup(addUfoLayout.createSequentialGroup()
                  .addGap(73, 73, 73)
                  .addGroup(addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                     .addGroup(addUfoLayout.createSequentialGroup()
                        .addGroup(addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                           .addComponent(lblUfoDescript)
                           .addComponent(lblUfoCity)
                           .addComponent(lblUfoOccur)
                           .addComponent(lblUfoState)
                           .addComponent(lblUfoShape)
                           .addComponent(lblUfoDuration))
                        .addGap(18, 18, 18)
                        .addGroup(addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                           .addGroup(addUfoLayout.createSequentialGroup()
                              .addComponent(boxUfoOccur, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                              .addComponent(lblUfoOccurSupp))
                           .addComponent(boxUfoState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addGroup(addUfoLayout.createSequentialGroup()
                              .addComponent(txtUfoCity, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                              .addComponent(lblUfoCitySupp))
                           .addGroup(addUfoLayout.createSequentialGroup()
                              .addComponent(txtUfoShape, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                              .addComponent(lblUfoShapeSupp, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                           .addGroup(addUfoLayout.createSequentialGroup()
                              .addComponent(boxUfoDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                              .addComponent(lblUfoDurationSupp))
                           .addComponent(scrollpaneUfo)))
                     .addComponent(btnUfo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(lblUfoDescriptSupp)))
            .addContainerGap(63, Short.MAX_VALUE))
      );
      addUfoLayout.setVerticalGroup(
         addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(addUfoLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addComponent(lblUfoDescriptSupp)
               .addGroup(addUfoLayout.createSequentialGroup()
                  .addComponent(lblUfo)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addGroup(addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(lblUfoOccur)
                     .addComponent(boxUfoOccur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(lblUfoOccurSupp))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(lblUfoCity)
                     .addComponent(txtUfoCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(lblUfoCitySupp))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(lblUfoState)
                     .addComponent(boxUfoState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(lblUfoShape)
                     .addComponent(txtUfoShape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(lblUfoShapeSupp))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(lblUfoDuration)
                     .addComponent(boxUfoDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(lblUfoDurationSupp))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(addUfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(lblUfoDescript)
                     .addComponent(scrollpaneUfo, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGap(18, 18, 18)
            .addComponent(btnUfo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(54, Short.MAX_VALUE))
      );

      tabPane.addTab("Report a UFO", addUfo);

      txtLogin.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

      txtPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

      btnLogin.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      btnLogin.setText("Login");
      btnLogin.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnLoginActionPerformed(evt);
         }
      });

      lblUser.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblUser.setText("User:");

      lblPw.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblPw.setText("Pass:");

      lblStatus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblStatus.setText("<html>Status: <b>Not Connected</b></html>");

      lblBy.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
      lblBy.setText("By: Alex Bartlett, Justin Kehl, Daniel Yao");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(22, 22, 22)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                     .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPw)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addGroup(layout.createSequentialGroup()
                        .addComponent(lblUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                  .addGap(18, 18, 18)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addGroup(layout.createSequentialGroup()
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblBy))))
               .addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(25, Short.MAX_VALUE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(22, 22, 22)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(lblUser)
               .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(lblBy))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(lblPw))
            .addGap(18, 18, 18)
            .addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(18, Short.MAX_VALUE))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed

      String pw = txtPassword.getText();

      if (pw.equals("") || logic.login(txtLogin.getText(), pw) == false)
      {
         btnLogin.setEnabled(true);
      }
      else
      {
         btnLogin.setEnabled(false);
         txtPassword.setEnabled(false);
         txtLogin.setEnabled(false);
         setTabStatus(true);
         lblStatus.setText("<html>Status: <b>Connected</b></html>");
      }
      txtPassword.setText("");
   }//GEN-LAST:event_btnLoginActionPerformed

   private void btnGetDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetDataActionPerformed
      logic.stateSelect(boxStates.getSelectedItem().toString(),
              boxStateQuerySelect.getSelectedIndex());
   }//GEN-LAST:event_btnGetDataActionPerformed

   private void btnAddShootingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddShootingActionPerformed
      SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
      
      String name = txtShootingName.getText();
      String date = format.format(boxShootingDate.getValue());
      String death = txtShootingDeath.getText();
      String weapon = txtShootingWeapon.getText();
      int age = (int) spinShooterAge.getValue();
      String gender = String.valueOf(boxShootingGender.getSelectedItem());
      String race = String.valueOf(boxShootingRace.getSelectedItem());
      String city = txtShootingCity.getText();
      String state = String.valueOf(boxShootingState.getSelectedItem());
      String mental = String.valueOf(boxShootingMental.getSelectedItem());
      String threat = String.valueOf(boxShootingThreat.getSelectedItem());
      String flee = String.valueOf(boxShootingFlee.getSelectedItem());
      String camera = String.valueOf(boxShootingCamera.getSelectedItem());

      if (death.equals(""))
      {
         death = "null";
      }
      if (weapon.equals(""))
      {
         weapon = "null";
      }
      switch (race)
      {
         case "Asian":
            race = "A";
            break;
         case "Black":
            race = "B";
            break;
         case "White":
            race = "W";
            break;
         case "Hispanic":
            race = "H";
            break;
         case "Other":
            race = "O";
            break;
      }

      if (name == null || city == null || state == null
              || name.equals("") || city.equals("") || state.equals(""))
      {
         lblDialogMessage.setText("ERROR: Required fields are missing");
         dialogMessage.setVisible(true);
      }
      else
      {
         logic.addShooting(name, date, death, weapon, age, gender, race, city, state, mental, threat, flee, camera);
      }
   }//GEN-LAST:event_btnAddShootingActionPerformed

   private void btnOkDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkDialogActionPerformed
      dialogMessage.dispose();
   }//GEN-LAST:event_btnOkDialogActionPerformed

    private void boxStateQuerySelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxStateQuerySelectActionPerformed
       // TODO add your handling code here:
    }//GEN-LAST:event_boxStateQuerySelectActionPerformed

    private void btnGetSightingDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetSightingDataActionPerformed
       logic.sightingSelect(boxSightingQuerySelect.getSelectedIndex());
    }//GEN-LAST:event_btnGetSightingDataActionPerformed

    private void boxSightingQuerySelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxSightingQuerySelectActionPerformed
       // TODO add your handling code here:
    }//GEN-LAST:event_boxSightingQuerySelectActionPerformed

    private void btnGetShootingDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetShootingDataActionPerformed
       logic.shootingSelect(boxShootingQuerySelect.getSelectedIndex());
    }//GEN-LAST:event_btnGetShootingDataActionPerformed

    private void boxShootingQuerySelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxShootingQuerySelectActionPerformed
       // TODO add your handling code here:
    }//GEN-LAST:event_boxShootingQuerySelectActionPerformed

   private void btnUfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUfoActionPerformed
      SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
      String occur = format.format(boxUfoOccur.getValue());
      String city = txtUfoCity.getText();
      String state = String.valueOf(boxUfoState.getSelectedItem());
      String shape = txtUfoShape.getText();
      int duration = (int) boxUfoDuration.getValue();
      String descript = txtUfoDescript.getText();

      if (city == null || city.equals(""))
      {
         lblDialogMessage.setText("ERROR: Required fields are missing");
         dialogMessage.setVisible(true);
      }
      else
      {
         logic.addUfo(occur, city, state, shape, duration, descript);
      }
   }//GEN-LAST:event_btnUfoActionPerformed

   private void statesTabFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_statesTabFocusGained
      // TODO add your handling code here:
   }//GEN-LAST:event_statesTabFocusGained

   /**
    * @param args the command line arguments
    */
   public static void main(final Logic logicRef) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
      /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try
      {
         UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
      } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex)
      {
         java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new GUI(logicRef).setVisible(true);
         }
      });
   }

   @Override
   public void update(Observable o, Object arg) {

      ENotify estate = (ENotify) arg;

      switch (estate)
      {
         case AN_STATES:
            tabStatesTable.setModel(logic.tableData);
            break;

         case AN_SIGHTINGS:
            tabSightingsTable.setModel(logic.tableData);
            break;

         case AN_SHOOTINGS:
            tabShootingsTable.setModel(logic.tableData);
            break;

         case ADD_SHOOTING:
            if (logic.success)
            {
               lblDialogMessage.setText("<html><b>SUCCESS:</b> A new shooting was added!</html>");
               logic.success = false;
               txtShootingName.setText("");
               txtShootingDeath.setText("");
               txtShootingWeapon.setText("");
               txtShootingCity.setText("");
            }
            else
            {
               lblDialogMessage.setText("<html><b>ERROR:</b> Unable to add new shooting</html>");
            }
            dialogMessage.setVisible(true);
            break;
         case ADD_SIGHTING:
            if (logic.success)
            {
               lblDialogMessage.setText("<html><b>SUCCESS:</b> A new ufo sighting was added!</html>");
               logic.success = false;
               txtUfoCity.setText("");
               txtUfoShape.setText("");
               txtUfoDescript.setText("");
            }
            else
            {
               lblDialogMessage.setText("<html><b>ERROR:</b> Unable to add new ufo sighting</html>");
            }
            dialogMessage.setVisible(true);
            break;
      }
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JPanel addShooting;
   private javax.swing.JPanel addUfo;
   private javax.swing.JComboBox<String> boxShootingCamera;
   private javax.swing.JSpinner boxShootingDate;
   private javax.swing.JComboBox<String> boxShootingFlee;
   private javax.swing.JComboBox<String> boxShootingGender;
   private javax.swing.JComboBox<String> boxShootingMental;
   private javax.swing.JComboBox boxShootingQuerySelect;
   private javax.swing.JComboBox<String> boxShootingRace;
   private javax.swing.JComboBox<String> boxShootingState;
   private javax.swing.JComboBox<String> boxShootingThreat;
   private javax.swing.JComboBox boxSightingQuerySelect;
   private javax.swing.JComboBox boxStateQuerySelect;
   private javax.swing.JComboBox<String> boxStates;
   private javax.swing.JSpinner boxUfoDuration;
   private javax.swing.JSpinner boxUfoOccur;
   private javax.swing.JComboBox<String> boxUfoState;
   private javax.swing.JButton btnAddShooting;
   private javax.swing.JButton btnGetData;
   private javax.swing.JButton btnGetShootingData;
   private javax.swing.JButton btnGetSightingData;
   private javax.swing.JButton btnLogin;
   private javax.swing.JButton btnOkDialog;
   private javax.swing.JButton btnUfo;
   private javax.swing.JDialog dialogMessage;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JScrollPane jScrollPane3;
   private javax.swing.JLabel lblAnalyzeStates;
   private javax.swing.JLabel lblBy;
   private javax.swing.JLabel lblDialogMessage;
   private javax.swing.JLabel lblPw;
   private javax.swing.JLabel lblShooting;
   private javax.swing.JLabel lblShootingAge;
   private javax.swing.JLabel lblShootingCamera;
   private javax.swing.JLabel lblShootingCity;
   private javax.swing.JLabel lblShootingCitySupp;
   private javax.swing.JLabel lblShootingDate;
   private javax.swing.JLabel lblShootingDateSupp;
   private javax.swing.JLabel lblShootingDeathSupp;
   private javax.swing.JLabel lblShootingFlee;
   private javax.swing.JLabel lblShootingGender;
   private javax.swing.JLabel lblShootingMental;
   private javax.swing.JLabel lblShootingName;
   private javax.swing.JLabel lblShootingName3;
   private javax.swing.JLabel lblShootingNameSupp;
   private javax.swing.JLabel lblShootingQuery;
   private javax.swing.JLabel lblShootingRace;
   private javax.swing.JLabel lblShootingState;
   private javax.swing.JLabel lblShootingThreat;
   private javax.swing.JLabel lblShootingWeapon;
   private javax.swing.JLabel lblShootings;
   private javax.swing.JLabel lblSightingQuery;
   private javax.swing.JLabel lblSightings;
   private javax.swing.JLabel lblStateQuery;
   private javax.swing.JLabel lblStatus;
   private javax.swing.JLabel lblUfo;
   private javax.swing.JLabel lblUfoCity;
   private javax.swing.JLabel lblUfoCitySupp;
   private javax.swing.JLabel lblUfoDescript;
   private javax.swing.JLabel lblUfoDescriptSupp;
   private javax.swing.JLabel lblUfoDuration;
   private javax.swing.JLabel lblUfoDurationSupp;
   private javax.swing.JLabel lblUfoOccur;
   private javax.swing.JLabel lblUfoOccurSupp;
   private javax.swing.JLabel lblUfoShape;
   private javax.swing.JLabel lblUfoShapeSupp;
   private javax.swing.JLabel lblUfoState;
   private javax.swing.JLabel lblUser;
   private javax.swing.JScrollPane scrollpaneUfo;
   private javax.swing.JPanel shootingsTab;
   private javax.swing.JPanel sightingsTab;
   private javax.swing.JSpinner spinShooterAge;
   private javax.swing.JPanel statesTab;
   private javax.swing.JLabel tab1LabelState;
   private javax.swing.JTabbedPane tabPane;
   private javax.swing.JTable tabShootingsTable;
   private javax.swing.JTable tabSightingsTable;
   private javax.swing.JTable tabStatesTable;
   private javax.swing.JTextField txtLogin;
   private javax.swing.JPasswordField txtPassword;
   private javax.swing.JTextField txtShootingCity;
   private javax.swing.JTextField txtShootingDeath;
   private javax.swing.JTextField txtShootingName;
   private javax.swing.JTextField txtShootingWeapon;
   private javax.swing.JTextField txtUfoCity;
   private javax.swing.JTextArea txtUfoDescript;
   private javax.swing.JTextField txtUfoShape;
   // End of variables declaration//GEN-END:variables
}
